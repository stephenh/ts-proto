// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.175.1
//   protoc               v3.21.12
// source: google/api/annotations.proto

/* eslint-disable */
import _m0 from "protobufjs/minimal";
import { HttpRule } from "./http";

export const http: Extension<HttpRule | undefined> = {
  number: 72295728,
  tag: 578365826,
  repeated: false,
  packed: false,
  encode: (value: HttpRule | undefined): Uint8Array[] => {
    const encoded: Uint8Array[] = [];
    const writer = _m0.Writer.create();
    HttpRule.encode(value, writer.fork()).ldelim();
    encoded.push(writer.finish());
    return encoded;
  },
  decode: (tag: number, input: Uint8Array[]): HttpRule | undefined => {
    const reader = _m0.Reader.create(input[input.length - 1] ?? fail());
    return HttpRule.decode(reader, reader.uint32());
  },
};

export interface Extension<T> {
  number: number;
  tag: number;
  singularTag?: number;
  encode?: (message: T) => Uint8Array[];
  decode?: (tag: number, input: Uint8Array[]) => T;
  repeated: boolean;
  packed: boolean;
}

function fail(message?: string): never {
  throw new globalThis.Error(message ?? "Failed");
}
