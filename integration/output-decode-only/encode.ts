// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// source: encode.proto

/* eslint-disable */
import { BinaryReader } from "@bufbuild/protobuf/wire";

export const protobufPackage = "";

export interface Encode {
  encode: string;
}

function createBaseEncode(): Encode {
  return { encode: "" };
}

export const Encode: MessageFns<Encode> = {
  decode(input: BinaryReader | Uint8Array, length?: number): Encode {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseEncode();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.encode = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },
};

export interface MessageFns<T> {
  decode(input: BinaryReader | Uint8Array, length?: number): T;
}
